### Key bindings

bindkey -e # emacs key bindings

### Completion

autoload -Uz compinit

# Always fall back to completing file names
zstyle ':completion:*' completer _complete _ignored _files

### History

HISTFILE=$HOME/var/zsh/history

# Keep and read 1e6 lines of history.
SAVEHIST=1000000
HISTSIZE=1000000

# Append to the history file immediately after each command,
# instead of when the shell exits.
setopt incappendhistory

# Don't store repeated lines.
setopt histignoredups

### Reporting

# Print times if a command takes more than 10 seconds
REPORTTIME=10

# Print exit status if non-zero
setopt printexitvalue

### Other options

setopt interactivecomments # allow comments in interactive shells
setopt autocontinue # resume disowned jobs
setopt notify # report job status immediately

### Path
# Have to set PATH here rather than .zshenv or it will be
# overwritten by /etc/profile

path+=(~/bin ~/go/bin)
path+=(/usr/local/sbin /usr/sbin /sbin)

manpath+=(~/share/man)

### Help
unalias run-help
autoload run-help
alias help=run-help

### Aliases

# Remove any "helpful" aliases from /etc/profile.d
unalias ls 2>/dev/null
unalias ll 2>/dev/null
unalias which 2>/dev/null

# Basic ls options: all, escape, classify, version sort, SI units, color
function ls { command ls -AbFv --si --color=auto "$@" }

# Long options: long, all, classify, version sort, ignore parent dir, SI units, color
# Run through the pager
function ll { command ls -l -aFv --si --ignore .. --color=always "$@" | less -FR }

# Tree: color, classify
function tree { command tree -CF "$@" }

alias lh='ls --ignore="[!.]*"' # list dotfiles
alias lt='ll -t' # sort by time

# Set LS_COLORS
if [ -f $HOME/cfg/dircolors ]; then
	eval `dircolors -b $HOME/cfg/dircolors`
fi

# Some conveniences
# l = ls
# p = $pager or ls
# e = $editor
# j = jobs

alias l=ls # pain to type on dvorak
alias /=ls # right next to l
alias j=jobs

function p {
	if [[ -z "$1" ]]; then
		$PAGER
	elif test -f "$1"; then
		$PAGER "$1"
	else
		ls "$1"
	fi
}

function e {
	if [[ -n $DISPLAY && -n $XEDITOR ]]; then
		$XEDITOR "$@"
	else
		$EDITOR "$@"
	fi
}

# List files after changing directory.
function cd { builtin cd "$@" && ls }
function qcd { builtin cd "$@" } # quiet cd
function mkcd { mkdir "$1" && cd "$1" }
function cmkdir { mkdir "$1" && cd "$1" }

# Make these less dangerous
# Also let rm delete empty directories
alias rm='rm -I --dir --one-file-system --preserve-root'
alias cp='cp -i'
alias mv='mv -i'
alias ln='ln -i'
alias sox='sox --no-clobber'

# Use SI units
alias df='df --si'
alias du='du --si'

# Use extended regular expressions
alias grep='grep -E'
alias sed='sed --regexp-extended'

# Some sane defaults for sshfs
alias sshfs='sshfs -o idmap=user,follow_symlinks,allow_root'

# Never have i ever actually wanted to run fc.
# R is an alias for 'fc -e -' and is much too close to l.
disable fc
disable r

### XDG support

function tmux { command tmux -f "$XDG_CONFIG_HOME/tmux/tmux.conf" "$@" }
function mocp { command mocp -M "$XDG_CONFIG_HOME/moc" "$@" }

### Window titles and prompt

# Default prompt: hostname (status)%
# Usually overridden in ./local with a colourful version
prompt='%m%(0?.. (%?%))%# '

function title() {
	case $TERM in
	screen|screen-*|tmux|tmux-*)
		print -n "\e]0;${(q)1}\a"
		;;
	xterm|xterm-*|rxvt-*|st|st-*)
		print -n "\e]1;${(q)1}\a"
		print -n "\e]2;$USER@$HOST ${(q)1}\a"
		;;
	esac
}

# Set title to current directory when not running a command
function precmd() {
	title "${PWD/$HOME/~}"
}

# Set title to command when running a command
function preexec() {
	set -A cmd ${(z)2}
	local n
	case $cmd[1] in
	fg|bg)
		shift cmd
		[[ -n $cmd[1] ]] || set -A cmd %%
		;& # fall through
	%*)
		# This case statement emulates jobs.c:getjob()
		#
		# See also:
		#   * /usr/share/zsh/functions/5.0.5/Misc/getjobs
		#   * http://www.zsh.org/mla/workers/2000/msg03988.html
		#   * http://zshwiki.org/home/examples/hardstatus
		case $cmd[1] in
			[\;\&\|]|\|\||\&\&) break ;;
			%(|[%+])) n=${(k)jobstates[(r)*:+:*]} ;;
			%-) n=${(k)jobstates[(r)*:-:*]} ;;
			%<->) n=${cmd[1]#%} ;;
			%[?]*) n=${${(Ok)jobtexts[(R)*${cmd[1]#%[?]}*]}[1]} ;;
			*) n=${${(Ok)jobtexts[(R)${cmd[1]}*]}[1]} ;;
		esac
		[[ -n $n ]] && texts=($texts ${jobtexts[$n]})
		title $jobtexts[$n]
		;;
	*)
		title $2
		;;
	esac
}

### TTY

# Disable flow control (^S and ^Q)
stty -ixon

# Freeze the tty settings
# This prevents curses applications from
# messing up the terminal after crashing
ttyctl -f

### Local overrides

test -e $HOME/cfg/zsh/local && source $HOME/cfg/zsh/local
